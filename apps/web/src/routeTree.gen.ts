/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AuthdRouteImport } from './routes/_authd'
import { Route as AuthdIndexRouteImport } from './routes/_authd/index'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthFinishRouteImport } from './routes/auth/finish'
import { Route as AuthdSettingsProfileRouteImport } from './routes/_authd/settings.profile'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthdRoute = AuthdRouteImport.update({
  id: '/_authd',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthdIndexRoute = AuthdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthdRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthFinishRoute = AuthFinishRouteImport.update({
  id: '/finish',
  path: '/finish',
  getParentRoute: () => AuthRoute,
} as any)
const AuthdSettingsProfileRoute = AuthdSettingsProfileRouteImport.update({
  id: '/settings/profile',
  path: '/settings/profile',
  getParentRoute: () => AuthdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteWithChildren
  '/auth/finish': typeof AuthFinishRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/': typeof AuthdIndexRoute
  '/settings/profile': typeof AuthdSettingsProfileRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/auth/finish': typeof AuthFinishRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/': typeof AuthdIndexRoute
  '/settings/profile': typeof AuthdSettingsProfileRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authd': typeof AuthdRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/finish': typeof AuthFinishRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/_authd/': typeof AuthdIndexRoute
  '/_authd/settings/profile': typeof AuthdSettingsProfileRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/auth/finish'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/'
    | '/settings/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/auth/finish'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/'
    | '/settings/profile'
  id:
    | '__root__'
    | '/_authd'
    | '/auth'
    | '/auth/finish'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/_authd/'
    | '/_authd/settings/profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthdRoute: typeof AuthdRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authd': {
      id: '/_authd'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authd/': {
      id: '/_authd/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthdIndexRouteImport
      parentRoute: typeof AuthdRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/finish': {
      id: '/auth/finish'
      path: '/finish'
      fullPath: '/auth/finish'
      preLoaderRoute: typeof AuthFinishRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_authd/settings/profile': {
      id: '/_authd/settings/profile'
      path: '/settings/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AuthdSettingsProfileRouteImport
      parentRoute: typeof AuthdRoute
    }
  }
}

interface AuthdRouteChildren {
  AuthdIndexRoute: typeof AuthdIndexRoute
  AuthdSettingsProfileRoute: typeof AuthdSettingsProfileRoute
}

const AuthdRouteChildren: AuthdRouteChildren = {
  AuthdIndexRoute: AuthdIndexRoute,
  AuthdSettingsProfileRoute: AuthdSettingsProfileRoute,
}

const AuthdRouteWithChildren = AuthdRoute._addFileChildren(AuthdRouteChildren)

interface AuthRouteChildren {
  AuthFinishRoute: typeof AuthFinishRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthFinishRoute: AuthFinishRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthdRoute: AuthdRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
