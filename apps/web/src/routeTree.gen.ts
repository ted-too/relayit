/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AuthdRouteImport } from './routes/_authd'
import { Route as AuthdIndexRouteImport } from './routes/_authd/index'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthdProjectSlugRouteImport } from './routes/_authd/$projectSlug'
import { Route as AuthdProjectSlugIndexRouteImport } from './routes/_authd/$projectSlug/index'
import { Route as AuthdSettingsProfileRouteImport } from './routes/_authd/settings.profile'
import { Route as AuthdAuthFinishRouteImport } from './routes/_authd/auth.finish'
import { Route as AuthdProjectSlugSettingsRouteImport } from './routes/_authd/$projectSlug/settings'
import { Route as AuthdProjectSlugContactsRouteImport } from './routes/_authd/$projectSlug/contacts'
import { Route as AuthdProjectSlugTemplatesIndexRouteImport } from './routes/_authd/$projectSlug/templates/index'
import { Route as AuthdProjectSlugSettingsIndexRouteImport } from './routes/_authd/$projectSlug/settings/index'
import { Route as AuthdProjectSlugTemplatesNewRouteImport } from './routes/_authd/$projectSlug/templates/new'
import { Route as AuthdProjectSlugTemplatesTemplateSlugRouteImport } from './routes/_authd/$projectSlug/templates/$templateSlug'
import { Route as AuthdProjectSlugSettingsTeamRouteImport } from './routes/_authd/$projectSlug/settings/team'
import { Route as AuthdProjectSlugSettingsIntegrationsRouteImport } from './routes/_authd/$projectSlug/settings/integrations'
import { Route as AuthdProjectSlugSettingsBillingRouteImport } from './routes/_authd/$projectSlug/settings/billing'
import { Route as AuthdProjectSlugSettingsApiKeysRouteImport } from './routes/_authd/$projectSlug/settings/api-keys'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthdRoute = AuthdRouteImport.update({
  id: '/_authd',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthdIndexRoute = AuthdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthdRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthdProjectSlugRoute = AuthdProjectSlugRouteImport.update({
  id: '/$projectSlug',
  path: '/$projectSlug',
  getParentRoute: () => AuthdRoute,
} as any)
const AuthdProjectSlugIndexRoute = AuthdProjectSlugIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthdProjectSlugRoute,
} as any)
const AuthdSettingsProfileRoute = AuthdSettingsProfileRouteImport.update({
  id: '/settings/profile',
  path: '/settings/profile',
  getParentRoute: () => AuthdRoute,
} as any)
const AuthdAuthFinishRoute = AuthdAuthFinishRouteImport.update({
  id: '/auth/finish',
  path: '/auth/finish',
  getParentRoute: () => AuthdRoute,
} as any)
const AuthdProjectSlugSettingsRoute =
  AuthdProjectSlugSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthdProjectSlugRoute,
  } as any)
const AuthdProjectSlugContactsRoute =
  AuthdProjectSlugContactsRouteImport.update({
    id: '/contacts',
    path: '/contacts',
    getParentRoute: () => AuthdProjectSlugRoute,
  } as any)
const AuthdProjectSlugTemplatesIndexRoute =
  AuthdProjectSlugTemplatesIndexRouteImport.update({
    id: '/templates/',
    path: '/templates/',
    getParentRoute: () => AuthdProjectSlugRoute,
  } as any)
const AuthdProjectSlugSettingsIndexRoute =
  AuthdProjectSlugSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthdProjectSlugSettingsRoute,
  } as any)
const AuthdProjectSlugTemplatesNewRoute =
  AuthdProjectSlugTemplatesNewRouteImport.update({
    id: '/templates/new',
    path: '/templates/new',
    getParentRoute: () => AuthdProjectSlugRoute,
  } as any)
const AuthdProjectSlugTemplatesTemplateSlugRoute =
  AuthdProjectSlugTemplatesTemplateSlugRouteImport.update({
    id: '/templates/$templateSlug',
    path: '/templates/$templateSlug',
    getParentRoute: () => AuthdProjectSlugRoute,
  } as any)
const AuthdProjectSlugSettingsTeamRoute =
  AuthdProjectSlugSettingsTeamRouteImport.update({
    id: '/team',
    path: '/team',
    getParentRoute: () => AuthdProjectSlugSettingsRoute,
  } as any)
const AuthdProjectSlugSettingsIntegrationsRoute =
  AuthdProjectSlugSettingsIntegrationsRouteImport.update({
    id: '/integrations',
    path: '/integrations',
    getParentRoute: () => AuthdProjectSlugSettingsRoute,
  } as any)
const AuthdProjectSlugSettingsBillingRoute =
  AuthdProjectSlugSettingsBillingRouteImport.update({
    id: '/billing',
    path: '/billing',
    getParentRoute: () => AuthdProjectSlugSettingsRoute,
  } as any)
const AuthdProjectSlugSettingsApiKeysRoute =
  AuthdProjectSlugSettingsApiKeysRouteImport.update({
    id: '/api-keys',
    path: '/api-keys',
    getParentRoute: () => AuthdProjectSlugSettingsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteWithChildren
  '/$projectSlug': typeof AuthdProjectSlugRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/': typeof AuthdIndexRoute
  '/$projectSlug/contacts': typeof AuthdProjectSlugContactsRoute
  '/$projectSlug/settings': typeof AuthdProjectSlugSettingsRouteWithChildren
  '/auth/finish': typeof AuthdAuthFinishRoute
  '/settings/profile': typeof AuthdSettingsProfileRoute
  '/$projectSlug/': typeof AuthdProjectSlugIndexRoute
  '/$projectSlug/settings/api-keys': typeof AuthdProjectSlugSettingsApiKeysRoute
  '/$projectSlug/settings/billing': typeof AuthdProjectSlugSettingsBillingRoute
  '/$projectSlug/settings/integrations': typeof AuthdProjectSlugSettingsIntegrationsRoute
  '/$projectSlug/settings/team': typeof AuthdProjectSlugSettingsTeamRoute
  '/$projectSlug/templates/$templateSlug': typeof AuthdProjectSlugTemplatesTemplateSlugRoute
  '/$projectSlug/templates/new': typeof AuthdProjectSlugTemplatesNewRoute
  '/$projectSlug/settings/': typeof AuthdProjectSlugSettingsIndexRoute
  '/$projectSlug/templates': typeof AuthdProjectSlugTemplatesIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/': typeof AuthdIndexRoute
  '/$projectSlug/contacts': typeof AuthdProjectSlugContactsRoute
  '/auth/finish': typeof AuthdAuthFinishRoute
  '/settings/profile': typeof AuthdSettingsProfileRoute
  '/$projectSlug': typeof AuthdProjectSlugIndexRoute
  '/$projectSlug/settings/api-keys': typeof AuthdProjectSlugSettingsApiKeysRoute
  '/$projectSlug/settings/billing': typeof AuthdProjectSlugSettingsBillingRoute
  '/$projectSlug/settings/integrations': typeof AuthdProjectSlugSettingsIntegrationsRoute
  '/$projectSlug/settings/team': typeof AuthdProjectSlugSettingsTeamRoute
  '/$projectSlug/templates/$templateSlug': typeof AuthdProjectSlugTemplatesTemplateSlugRoute
  '/$projectSlug/templates/new': typeof AuthdProjectSlugTemplatesNewRoute
  '/$projectSlug/settings': typeof AuthdProjectSlugSettingsIndexRoute
  '/$projectSlug/templates': typeof AuthdProjectSlugTemplatesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authd': typeof AuthdRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/_authd/$projectSlug': typeof AuthdProjectSlugRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/_authd/': typeof AuthdIndexRoute
  '/_authd/$projectSlug/contacts': typeof AuthdProjectSlugContactsRoute
  '/_authd/$projectSlug/settings': typeof AuthdProjectSlugSettingsRouteWithChildren
  '/_authd/auth/finish': typeof AuthdAuthFinishRoute
  '/_authd/settings/profile': typeof AuthdSettingsProfileRoute
  '/_authd/$projectSlug/': typeof AuthdProjectSlugIndexRoute
  '/_authd/$projectSlug/settings/api-keys': typeof AuthdProjectSlugSettingsApiKeysRoute
  '/_authd/$projectSlug/settings/billing': typeof AuthdProjectSlugSettingsBillingRoute
  '/_authd/$projectSlug/settings/integrations': typeof AuthdProjectSlugSettingsIntegrationsRoute
  '/_authd/$projectSlug/settings/team': typeof AuthdProjectSlugSettingsTeamRoute
  '/_authd/$projectSlug/templates/$templateSlug': typeof AuthdProjectSlugTemplatesTemplateSlugRoute
  '/_authd/$projectSlug/templates/new': typeof AuthdProjectSlugTemplatesNewRoute
  '/_authd/$projectSlug/settings/': typeof AuthdProjectSlugSettingsIndexRoute
  '/_authd/$projectSlug/templates/': typeof AuthdProjectSlugTemplatesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/$projectSlug'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/'
    | '/$projectSlug/contacts'
    | '/$projectSlug/settings'
    | '/auth/finish'
    | '/settings/profile'
    | '/$projectSlug/'
    | '/$projectSlug/settings/api-keys'
    | '/$projectSlug/settings/billing'
    | '/$projectSlug/settings/integrations'
    | '/$projectSlug/settings/team'
    | '/$projectSlug/templates/$templateSlug'
    | '/$projectSlug/templates/new'
    | '/$projectSlug/settings/'
    | '/$projectSlug/templates'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/'
    | '/$projectSlug/contacts'
    | '/auth/finish'
    | '/settings/profile'
    | '/$projectSlug'
    | '/$projectSlug/settings/api-keys'
    | '/$projectSlug/settings/billing'
    | '/$projectSlug/settings/integrations'
    | '/$projectSlug/settings/team'
    | '/$projectSlug/templates/$templateSlug'
    | '/$projectSlug/templates/new'
    | '/$projectSlug/settings'
    | '/$projectSlug/templates'
  id:
    | '__root__'
    | '/_authd'
    | '/auth'
    | '/_authd/$projectSlug'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/_authd/'
    | '/_authd/$projectSlug/contacts'
    | '/_authd/$projectSlug/settings'
    | '/_authd/auth/finish'
    | '/_authd/settings/profile'
    | '/_authd/$projectSlug/'
    | '/_authd/$projectSlug/settings/api-keys'
    | '/_authd/$projectSlug/settings/billing'
    | '/_authd/$projectSlug/settings/integrations'
    | '/_authd/$projectSlug/settings/team'
    | '/_authd/$projectSlug/templates/$templateSlug'
    | '/_authd/$projectSlug/templates/new'
    | '/_authd/$projectSlug/settings/'
    | '/_authd/$projectSlug/templates/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthdRoute: typeof AuthdRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authd': {
      id: '/_authd'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authd/': {
      id: '/_authd/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthdIndexRouteImport
      parentRoute: typeof AuthdRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_authd/$projectSlug': {
      id: '/_authd/$projectSlug'
      path: '/$projectSlug'
      fullPath: '/$projectSlug'
      preLoaderRoute: typeof AuthdProjectSlugRouteImport
      parentRoute: typeof AuthdRoute
    }
    '/_authd/$projectSlug/': {
      id: '/_authd/$projectSlug/'
      path: '/'
      fullPath: '/$projectSlug/'
      preLoaderRoute: typeof AuthdProjectSlugIndexRouteImport
      parentRoute: typeof AuthdProjectSlugRoute
    }
    '/_authd/settings/profile': {
      id: '/_authd/settings/profile'
      path: '/settings/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AuthdSettingsProfileRouteImport
      parentRoute: typeof AuthdRoute
    }
    '/_authd/auth/finish': {
      id: '/_authd/auth/finish'
      path: '/auth/finish'
      fullPath: '/auth/finish'
      preLoaderRoute: typeof AuthdAuthFinishRouteImport
      parentRoute: typeof AuthdRoute
    }
    '/_authd/$projectSlug/settings': {
      id: '/_authd/$projectSlug/settings'
      path: '/settings'
      fullPath: '/$projectSlug/settings'
      preLoaderRoute: typeof AuthdProjectSlugSettingsRouteImport
      parentRoute: typeof AuthdProjectSlugRoute
    }
    '/_authd/$projectSlug/contacts': {
      id: '/_authd/$projectSlug/contacts'
      path: '/contacts'
      fullPath: '/$projectSlug/contacts'
      preLoaderRoute: typeof AuthdProjectSlugContactsRouteImport
      parentRoute: typeof AuthdProjectSlugRoute
    }
    '/_authd/$projectSlug/templates/': {
      id: '/_authd/$projectSlug/templates/'
      path: '/templates'
      fullPath: '/$projectSlug/templates'
      preLoaderRoute: typeof AuthdProjectSlugTemplatesIndexRouteImport
      parentRoute: typeof AuthdProjectSlugRoute
    }
    '/_authd/$projectSlug/settings/': {
      id: '/_authd/$projectSlug/settings/'
      path: '/'
      fullPath: '/$projectSlug/settings/'
      preLoaderRoute: typeof AuthdProjectSlugSettingsIndexRouteImport
      parentRoute: typeof AuthdProjectSlugSettingsRoute
    }
    '/_authd/$projectSlug/templates/new': {
      id: '/_authd/$projectSlug/templates/new'
      path: '/templates/new'
      fullPath: '/$projectSlug/templates/new'
      preLoaderRoute: typeof AuthdProjectSlugTemplatesNewRouteImport
      parentRoute: typeof AuthdProjectSlugRoute
    }
    '/_authd/$projectSlug/templates/$templateSlug': {
      id: '/_authd/$projectSlug/templates/$templateSlug'
      path: '/templates/$templateSlug'
      fullPath: '/$projectSlug/templates/$templateSlug'
      preLoaderRoute: typeof AuthdProjectSlugTemplatesTemplateSlugRouteImport
      parentRoute: typeof AuthdProjectSlugRoute
    }
    '/_authd/$projectSlug/settings/team': {
      id: '/_authd/$projectSlug/settings/team'
      path: '/team'
      fullPath: '/$projectSlug/settings/team'
      preLoaderRoute: typeof AuthdProjectSlugSettingsTeamRouteImport
      parentRoute: typeof AuthdProjectSlugSettingsRoute
    }
    '/_authd/$projectSlug/settings/integrations': {
      id: '/_authd/$projectSlug/settings/integrations'
      path: '/integrations'
      fullPath: '/$projectSlug/settings/integrations'
      preLoaderRoute: typeof AuthdProjectSlugSettingsIntegrationsRouteImport
      parentRoute: typeof AuthdProjectSlugSettingsRoute
    }
    '/_authd/$projectSlug/settings/billing': {
      id: '/_authd/$projectSlug/settings/billing'
      path: '/billing'
      fullPath: '/$projectSlug/settings/billing'
      preLoaderRoute: typeof AuthdProjectSlugSettingsBillingRouteImport
      parentRoute: typeof AuthdProjectSlugSettingsRoute
    }
    '/_authd/$projectSlug/settings/api-keys': {
      id: '/_authd/$projectSlug/settings/api-keys'
      path: '/api-keys'
      fullPath: '/$projectSlug/settings/api-keys'
      preLoaderRoute: typeof AuthdProjectSlugSettingsApiKeysRouteImport
      parentRoute: typeof AuthdProjectSlugSettingsRoute
    }
  }
}

interface AuthdProjectSlugSettingsRouteChildren {
  AuthdProjectSlugSettingsApiKeysRoute: typeof AuthdProjectSlugSettingsApiKeysRoute
  AuthdProjectSlugSettingsBillingRoute: typeof AuthdProjectSlugSettingsBillingRoute
  AuthdProjectSlugSettingsIntegrationsRoute: typeof AuthdProjectSlugSettingsIntegrationsRoute
  AuthdProjectSlugSettingsTeamRoute: typeof AuthdProjectSlugSettingsTeamRoute
  AuthdProjectSlugSettingsIndexRoute: typeof AuthdProjectSlugSettingsIndexRoute
}

const AuthdProjectSlugSettingsRouteChildren: AuthdProjectSlugSettingsRouteChildren =
  {
    AuthdProjectSlugSettingsApiKeysRoute: AuthdProjectSlugSettingsApiKeysRoute,
    AuthdProjectSlugSettingsBillingRoute: AuthdProjectSlugSettingsBillingRoute,
    AuthdProjectSlugSettingsIntegrationsRoute:
      AuthdProjectSlugSettingsIntegrationsRoute,
    AuthdProjectSlugSettingsTeamRoute: AuthdProjectSlugSettingsTeamRoute,
    AuthdProjectSlugSettingsIndexRoute: AuthdProjectSlugSettingsIndexRoute,
  }

const AuthdProjectSlugSettingsRouteWithChildren =
  AuthdProjectSlugSettingsRoute._addFileChildren(
    AuthdProjectSlugSettingsRouteChildren,
  )

interface AuthdProjectSlugRouteChildren {
  AuthdProjectSlugContactsRoute: typeof AuthdProjectSlugContactsRoute
  AuthdProjectSlugSettingsRoute: typeof AuthdProjectSlugSettingsRouteWithChildren
  AuthdProjectSlugIndexRoute: typeof AuthdProjectSlugIndexRoute
  AuthdProjectSlugTemplatesTemplateSlugRoute: typeof AuthdProjectSlugTemplatesTemplateSlugRoute
  AuthdProjectSlugTemplatesNewRoute: typeof AuthdProjectSlugTemplatesNewRoute
  AuthdProjectSlugTemplatesIndexRoute: typeof AuthdProjectSlugTemplatesIndexRoute
}

const AuthdProjectSlugRouteChildren: AuthdProjectSlugRouteChildren = {
  AuthdProjectSlugContactsRoute: AuthdProjectSlugContactsRoute,
  AuthdProjectSlugSettingsRoute: AuthdProjectSlugSettingsRouteWithChildren,
  AuthdProjectSlugIndexRoute: AuthdProjectSlugIndexRoute,
  AuthdProjectSlugTemplatesTemplateSlugRoute:
    AuthdProjectSlugTemplatesTemplateSlugRoute,
  AuthdProjectSlugTemplatesNewRoute: AuthdProjectSlugTemplatesNewRoute,
  AuthdProjectSlugTemplatesIndexRoute: AuthdProjectSlugTemplatesIndexRoute,
}

const AuthdProjectSlugRouteWithChildren =
  AuthdProjectSlugRoute._addFileChildren(AuthdProjectSlugRouteChildren)

interface AuthdRouteChildren {
  AuthdProjectSlugRoute: typeof AuthdProjectSlugRouteWithChildren
  AuthdIndexRoute: typeof AuthdIndexRoute
  AuthdAuthFinishRoute: typeof AuthdAuthFinishRoute
  AuthdSettingsProfileRoute: typeof AuthdSettingsProfileRoute
}

const AuthdRouteChildren: AuthdRouteChildren = {
  AuthdProjectSlugRoute: AuthdProjectSlugRouteWithChildren,
  AuthdIndexRoute: AuthdIndexRoute,
  AuthdAuthFinishRoute: AuthdAuthFinishRoute,
  AuthdSettingsProfileRoute: AuthdSettingsProfileRoute,
}

const AuthdRouteWithChildren = AuthdRoute._addFileChildren(AuthdRouteChildren)

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthdRoute: AuthdRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
