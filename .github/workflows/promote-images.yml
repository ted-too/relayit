name: Promote Images

on:
  push:
    branches:
      - main
  release:
    types: [published]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  promote:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [api, worker, web]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract PR number from merge commit
        id: extract-pr
        run: |
          # Extract PR number from squash merge commit message
          # Format: "feat: add SMS provider (#123)"
          PR_NUMBER=$(git log -1 --pretty=format:"%s" | grep -oE '\(#([0-9]+)\)' | grep -oE '[0-9]+' || echo "")
          
          if [ -n "$PR_NUMBER" ]; then
            echo "pr-number=${PR_NUMBER}" >> $GITHUB_OUTPUT
            echo "✅ Found PR number: $PR_NUMBER"
          else
            echo "pr-number=" >> $GITHUB_OUTPUT
            echo "❌ No PR number found in commit message"
          fi

      - name: Check if PR build exists
        id: check-source
        if: steps.extract-pr.outputs.pr-number != ''
        run: |
          REPO_NAME="${{ github.repository_owner }}/relayit-${{ matrix.app }}"
          SOURCE_TAG="${{ env.REGISTRY }}/${REPO_NAME}:pr-${{ steps.extract-pr.outputs.pr-number }}"
          
          if docker manifest inspect "$SOURCE_TAG" > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "source-tag=${SOURCE_TAG}" >> $GITHUB_OUTPUT
            echo "✅ Found PR build: $SOURCE_TAG"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "❌ PR build not found: $SOURCE_TAG"
          fi

      - name: Generate promotion tags
        if: steps.check-source.outputs.exists == 'true'
        id: tags
        run: |
          REPO_NAME="${{ github.repository_owner }}/relayit-${{ matrix.app }}"
          
          # Base tags for main branch
          TAGS="${{ env.REGISTRY }}/${REPO_NAME}:${GITHUB_SHA::8}"
          TAGS="${TAGS},${{ env.REGISTRY }}/${REPO_NAME}:latest"
          TAGS="${TAGS},${{ env.REGISTRY }}/${REPO_NAME}:alpha"
          
          # Add release tags if this is a release
          if [ "${{ github.event_name }}" = "release" ]; then
            TAGS="${TAGS},${{ env.REGISTRY }}/${REPO_NAME}:${{ github.event.release.tag_name }}"
          fi
          
          echo "target-tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "repo-name=${REPO_NAME}" >> $GITHUB_OUTPUT

      - name: Promote by retagging
        if: steps.check-source.outputs.exists == 'true' && steps.extract-pr.outputs.pr-number != ''
        run: |
          SOURCE_TAG="${{ steps.check-source.outputs.source-tag }}"
          
          echo "🚀 Promoting $SOURCE_TAG"
          
          # Pull the source image
          docker pull "$SOURCE_TAG"
          
          # Retag for each target tag
          IFS=',' read -ra TAGS <<< "${{ steps.tags.outputs.target-tags }}"
          for tag in "${TAGS[@]}"; do
            echo "🏷️ Tagging as: $tag"
            docker tag "$SOURCE_TAG" "$tag"
            docker push "$tag"
          done
          
          echo "✅ Successfully promoted ${{ matrix.app }}"

      - name: Fallback build (if PR image missing)
        if: steps.extract-pr.outputs.pr-number == '' || steps.check-source.outputs.exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ matrix.app }}/Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.target-tags }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Promotion complete
        run: |
          if [ "${{ steps.extract-pr.outputs.pr-number }}" != "" ] && [ "${{ steps.check-source.outputs.exists }}" = "true" ]; then
            echo "🎉 ${{ matrix.app }} promoted from PR #${{ steps.extract-pr.outputs.pr-number }}"
            echo "📦 Tags: ${{ steps.tags.outputs.target-tags }}"
          else
            echo "🔨 ${{ matrix.app }} built from scratch"
            echo "   Reason: PR number not found or PR image missing"
          fi
