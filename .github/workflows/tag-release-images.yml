name: Tag Release Images

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  tag-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [api, worker, web]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract PR number from merge commit
        id: extract-pr
        run: |
          # Try multiple patterns to extract PR number
          COMMIT_MSG=$(git log -1 --pretty=format:"%s")
          echo "üîç Analyzing commit: $COMMIT_MSG"
          
          # Pattern 1: Squash merge - "feat: add feature (#123)"
          PR_NUMBER=$(echo "$COMMIT_MSG" | grep -oE '\(#([0-9]+)\)' | grep -oE '[0-9]+' || echo "")
          
          # Pattern 2: Merge commit - "Merge pull request #123 from..."
          if [ -z "$PR_NUMBER" ]; then
            PR_NUMBER=$(echo "$COMMIT_MSG" | grep -oE 'pull request #([0-9]+)' | grep -oE '[0-9]+' || echo "")
          fi
          
          # Pattern 3: Look at merge commit parents (if it's a merge commit)
          if [ -z "$PR_NUMBER" ]; then
            # Check if this is a merge commit by looking for PR in merge message
            PR_NUMBER=$(git log --merges -1 --pretty=format:"%s" | grep -oE '#([0-9]+)' | grep -oE '[0-9]+' | head -1 || echo "")
          fi
          
          if [ -n "$PR_NUMBER" ]; then
            echo "pr-number=${PR_NUMBER}" >> $GITHUB_OUTPUT
            echo "‚úÖ Found PR number: $PR_NUMBER"
          else
            echo "‚ö†Ô∏è No PR number found in commit message"
            echo "üîß Will build from scratch instead of retagging"
            echo "pr-number=" >> $GITHUB_OUTPUT
          fi

      - name: Retag PR image as release
        if: steps.extract-pr.outputs.pr-number != ''
        run: |
          REPO_NAME="${{ github.repository_owner }}/relayit-${{ matrix.app }}"
          VERSION="${{ github.event.release.tag_name }}"
          PR_NUMBER="${{ steps.extract-pr.outputs.pr-number }}"
          
          # Remove 'v' prefix if present (v0.1.0 -> 0.1.0)
          CLEAN_VERSION=${VERSION#v}
          
          # Source image from PR build
          SOURCE_IMAGE="${{ env.REGISTRY }}/${REPO_NAME}:pr-${PR_NUMBER}"
          
          # Target tags
          VERSION_TAG="${{ env.REGISTRY }}/${REPO_NAME}:${CLEAN_VERSION}"
          MAIN_TAG="${{ env.REGISTRY }}/${REPO_NAME}:main"
          
          echo "üöÄ Retagging PR image for ${{ matrix.app }}"
          echo "üì¶ Source: pr-${PR_NUMBER} ‚Üí ${CLEAN_VERSION}, main"
          
          # Check if PR image exists
          if docker manifest inspect "$SOURCE_IMAGE" > /dev/null 2>&1; then
            # Pull the PR image
            docker pull "$SOURCE_IMAGE"
            
            # Tag with version
            echo "üè∑Ô∏è Tagging as: $VERSION_TAG"
            docker tag "$SOURCE_IMAGE" "$VERSION_TAG"
            docker push "$VERSION_TAG"
            
            # Tag as main
            echo "üè∑Ô∏è Tagging as: $MAIN_TAG"
            docker tag "$SOURCE_IMAGE" "$MAIN_TAG"
            docker push "$MAIN_TAG"
            
            echo "‚úÖ Successfully retagged ${{ matrix.app }} release images"
          else
            echo "‚ùå PR image $SOURCE_IMAGE not found, will build from scratch"
            exit 1
          fi

      - name: Build release from scratch (fallback)
        if: steps.extract-pr.outputs.pr-number == ''
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ matrix.app }}/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/relayit-${{ matrix.app }}:${{ github.event.release.tag_name }}
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/relayit-${{ matrix.app }}:main
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TURBO_TOKEN=${{ secrets.TURBO_TOKEN }}
            TURBO_TEAM=${{ secrets.TURBO_TEAM }}

      - name: Release tagging complete
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          CLEAN_VERSION=${VERSION#v}
          
          echo "üéâ ${{ matrix.app }} tagged with version ${{ github.event.release.tag_name }}"
          echo "üì¶ Available tags:"
          echo "   - ${{ github.repository_owner }}/relayit-${{ matrix.app }}:${CLEAN_VERSION}"
          echo "   - ${{ github.repository_owner }}/relayit-${{ matrix.app }}:main"
